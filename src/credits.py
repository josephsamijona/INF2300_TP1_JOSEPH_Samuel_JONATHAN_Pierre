import pygame
import os

class Button:
    def __init__(self, text, font, color, x, y, width, height):
        self.text = text
        self.font = font
        self.color = color
        self.rect = pygame.Rect(x, y, width, height)
        self.hovered = False

    def draw(self, screen):
        if self.hovered:
            pygame.draw.rect(screen, (255, 255, 255), self.rect)
        else:
            pygame.draw.rect(screen, self.color, self.rect)
        
        text_surface = self.font.render(self.text, True, (0, 0, 0))
        text_rect = text_surface.get_rect(center=self.rect.center)
        screen.blit(text_surface, text_rect)

    def check_hover(self, mouse_pos):
        self.hovered = self.rect.collidepoint(mouse_pos)

class ScrollingText:
    def __init__(self, text, font, color, x, y, width):
        self.text = text
        self.font = font
        self.color = color
        self.x = x
        self.y = y
        self.width = width
        self.lines = [line.strip() for line in text.split('\n')]

    def draw(self, screen, speed):
        for i, line in enumerate(self.lines):
            text_surface = self.font.render(line, True, self.color)
            text_rect = text_surface.get_rect(center=(self.x, self.y + i * text_surface.get_height()))
            screen.blit(text_surface, text_rect)
        self.y -= speed

def show_credits(screen):
    # Obtenir le chemin absolu du fichier image de fond
    current_dir = os.path.dirname(os.path.abspath(__file__))
    background_path = os.path.join(current_dir, "../game/assets/backgrounds/menu_background.png")
    photo1_path = os.path.join(current_dir, "../game/assets/characters/samuel.png")
    photo2_path = os.path.join(current_dir, "../game/assets/characters/jonathan.png")

    # Charger l'image de fond et les photos des cr√©ateurs
    background = pygame.image.load(background_path)
    photo1 = pygame.image.load(photo1_path)
    photo2 = pygame.image.load(photo2_path)

    # Redimensionner les photos des cr√©ateurs
    photo1 = pygame.transform.scale(photo1, (screen.get_width() // 4, screen.get_height() // 4))
    photo2 = pygame.transform.scale(photo2, (screen.get_width() // 4, screen.get_height() // 4))

    # Initialiser Pygame Mixer pour le son de fond
    sound_path = os.path.join(current_dir, "../game/assets/music/LEMMiNO - Cipher (BGM).mp3")
    pygame.mixer.init()
    if not pygame.mixer.music.get_busy():
        pygame.mixer.music.load(sound_path)
        pygame.mixer.music.play(-1)  # Jouer en boucle

    # D√©finir la police et la taille
    font_path = os.path.join(current_dir, "../game/assets/fonts/Seagram tfb.ttf")
    font = pygame.font.Font(font_path, screen.get_height() // 40)
    title_font = pygame.font.Font(font_path, screen.get_height() // 20)

    # D√©finir le texte des cr√©dits
    credits_text = """
    ü•ã Jeu de Combat - INF2300 Infographie ü•ã

    Introduction
    Bienvenue dans notre projet de jeu de combat ! Ce projet a √©t√© cr√©√© avec une passion d√©bordante pour l'apprentissage et l'excellence en programmation. Inspir√© par les g√©ants du code, Coder Space et Coding With Russ, nous avons mis tout notre c≈ìur (et un peu de sueur) dans ce jeu. Pr√©parez-vous √† d√©couvrir un univers o√π chaque ligne de code compte et o√π les combats sont √©piques ! üéÆ

    Inspiration
    Ce projet n'aurait pas √©t√© possible sans l'inspiration tir√©e des travaux exceptionnels de :
    - Coder Space
      - YouTube : Coder Space Channel
      - GitHub : Stanislav Petrov

    - Coding With Russ
      - YouTube : Coding With Russ
      - GitHub : Russ

    Merci √† eux pour leur partage de connaissances et leurs tutos incroyables. Vous √™tes des rock stars du code ! ü§ò

    Utilisation des Assets
    Tous les assets utilis√©s dans ce projet proviennent de itch.io et ont √©t√© fournis gratuitement. Nous respectons pleinement les droits d'auteur des cr√©ateurs. Un grand merci √† la communaut√© d'itch.io pour rendre ce projet encore plus visuellement attrayant ! üé®

    Licence
    Ce projet est sous licence MIT. Cela signifie que vous √™tes libre de l'utiliser, de le modifier et de le partager. Nous vous encourageons √† le faire pour promouvoir le partage de la connaissance libre. Apr√®s tout, le savoir est fait pour √™tre partag√©, pas pour rester cach√© dans un tiroir poussi√©reux ! üìö‚ú®

    Contact
    Nous sommes toujours ouverts aux questions, suggestions et messages d'encouragement (ou m√™me de d√©fis !) :
    - üìß isteah.josephsamuel@gmail.com ‚Äì JOSEPH Samuel Jonathan
    - üìß isteah.jpierrelouis03@gmail.com ‚Äì JONATHAN Pierre Louis

    Informations du Cours
    - Cours : INF2300 Infographie
    - Session : √ât√© 2024
    - Travail No. : 2
    - Groupe :
      - JOSEPH Samuel Jonathan
      - JONATHAN Pierre Louis
    - Soumis au : Dre. Franjieh El Khoury
    - Date : 20 juin 2024

    Fonctionnalit√©s du Jeu
    - üé¨ Introduction Vid√©o : Une vid√©o d'introduction captivante pour plonger les joueurs dans l'ambiance du jeu.
    - üïπÔ∏è Menu Principal : Avec un fond anim√© et des options claires (Play, Settings, Credits, Exit).
    - ü•ä Modes de Combat : Choisissez entre 1 vs 2, 1 vs Computer, ou Computer vs Computer. Peu importe le mode, le choix du personnage est √† vous !
    - üé∂ Param√®tres : Ajustez le son, la musique et les effets pour une exp√©rience de jeu optimale.
    - üë®‚Äçüíª Cr√©dits : D√©couvrez les cerveaux derri√®re ce projet incroyable.

    Remerciements
    Un immense merci √† nos professeurs, coll√®gues, amis, et bien s√ªr, √† vous, pour votre int√©r√™t et votre soutien. Et souvenez-vous : coder, c'est comme combattre ‚Äì il faut de la strat√©gie, de la d√©termination, et parfois, un bon caf√© ! ‚òïüë®‚Äçüíªüë©‚Äçüíª
    """

    scrolling_text = ScrollingText(credits_text, font, (255, 0, 0), screen.get_width() // 2, screen.get_height(), screen.get_width() - 40)

    # Cr√©er le bouton "Retour"
    button_font = pygame.font.Font(font_path, screen.get_height() // 30)
    return_button = Button("Retour", button_font, (200, 200, 200), screen.get_width() // 2 - 100, screen.get_height() - 100, 200, 50)

    clock = pygame.time.Clock()

    while True:
        mouse_pos = pygame.mouse.get_pos()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                return
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if return_button.hovered:
                    return

        # Redimensionner l'image de fond
        background = pygame.transform.scale(background, (screen.get_width(), screen.get_height()))
        screen.blit(background, (0, 0))

        # Afficher les photos des cr√©ateurs
        screen.blit(photo1, (screen.get_width() // 4 - photo1.get_width() // 2, 50))
        screen.blit(photo2, (3 * screen.get_width() // 4 - photo2.get_width() // 2, 50))

        # Afficher le texte d√©filant
        scrolling_text.draw(screen, 1)

        # Afficher le bouton "Retour"
        return_button.check_hover(mouse_pos)
        return_button.draw(screen)

        pygame.display.flip()
        clock.tick(30)

if __name__ == "__main__":
    pygame.init()
    screen = pygame.display.set_mode((1200, 800), pygame.RESIZABLE)
    show_credits(screen)
    pygame.quit()
